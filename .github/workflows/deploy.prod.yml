name: Deploy-to-prod
on:
  push:
    tags:
      - "v*"
      - "!v*-test"
      - "!v*-dev"
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Define build environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ::set-env name=CI::true
          echo ::set-env name=IMAGE_REGISTRY::docker.pkg.github.com/$(echo ${GITHUB_REPOSITORY})
          echo ::set-env name=IMAGE_NAME::$(echo ${GITHUB_REPOSITORY##*/})
          echo ::set-env name=IMAGE_VERSION::$(echo ${GITHUB_WORKFLOW})-$(echo ${GITHUB_SHA})
          echo ::set-env name=GITHUB_TOKEN::$(echo ${GITHUB_TOKEN})
      - name: Define client-side environment
        run: |
          echo ::set-env name=REACT_APP_MILJO::PROD
          echo ::set-env name=REACT_APP_PDL_URL::https://www.nav.no/person/pdl-fullmakt-ui
          echo ::set-env name=REACT_APP_BFT_URL::https://www.nav.no/person/behov-for-tilrettelegging
          echo ::set-env name=REACT_APP_SKJERMING_URL::https://www.nav.no/person/personopplysninger/skjerming
          echo ::set-env name=REACT_APP_URL::https://www.nav.no/person/personopplysninger
          echo ::set-env name=REACT_APP_API_URL::https://www.nav.no/person/personopplysninger-api
          echo ::set-env name=REACT_APP_DSOP_URL::https://www.nav.no/person/dsop-api
          echo ::set-env name=REACT_APP_TJENESTER_URL::https://tjenester.nav.no
          echo ::set-env name=REACT_APP_LOGIN_URL::https://loginservice.nav.no/login
          echo ::set-env name=REACT_APP_DITT_NAV_URL::https://www.nav.no/person/dittnav
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm i @navikt/arbeidsforhold@latest
      - run: npm test
      - run: npm run build
      - name: Docker build and push
        run: |
          echo $GITHUB_TOKEN | docker login $IMAGE_REGISTRY -u ${GITHUB_REPOSITORY} --password-stdin
          docker build -t $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION -t $IMAGE_REGISTRY/$IMAGE_NAME:latest .
          docker push $IMAGE_REGISTRY/$IMAGE_NAME
      - name: Generate nais variables
        run: |
          cat > .nais/vars.yaml <<EOF
          namespace: default
          ingresses:
            - https://personopplysninger.nais.oera.no
            - https://www.nav.no/person/personopplysninger
          image: $IMAGE_REGISTRY/$IMAGE_NAME
          version: $IMAGE_VERSION
          EOF
      - uses: nais/deploy/actions/deploy@master
        env:
          CLUSTER: prod-sbs
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: .nais/config.yaml
          VARS: .nais/vars.yaml
